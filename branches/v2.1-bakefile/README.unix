Building the Library and Example Programs
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	MySQL++ uses the GNU autotools, so you can build it with the
	standard commands:

	# ./configure
	$ make
	$ su
	# make install


Configure Options
~~~~~~~~~~~~~~~~~
	The configure script takes several interesting options. Say:

		$ ./configure --help

	to get a list.  Some of the more interesting flags are:

	--prefix:

		If you wish to install mysql++ in a root directory
		other than /usr/local, run configure with
		--prefix=/some/dir/name

	--with-mysql*:

		If you installed MySQL in an atypical location,
		the configure script will not be able to find the
		library and header files without help.	The simplest
		way to clue configure into where MySQL is installed
		is with the --with-mysql option.  Try something
		like "--with-mysql=/usr/local/mysql", for instance.
		The configure script will then try to guess which
		subdirectories under the given directory contain the
		library and include files.

		If that still doesn't work, use --with-mysql-include
		and --with-mysql-lib instead.  As with --with-mysql,
		configure can often guess which subdirectory under the
		given directory contains the needed files, so you don't
		necessarily have to give the full path to these files.

	--enable-thread-check:

		Builds MySQL++ with threads support, if possible.
		
		This option simply turns on two tests: first, that
		your system uses a compatible threading library; and
		second, that the thread-safe version of the MySQL C API
		library (libmysqlclient_r) is installed and working.
		If both of these are true, you get a thread-aware
		version of MySQL++.  "Thread-aware" means that the
		library does make an effort to prevent problems, but
		we don't guarantee that all possible uses of MySQL++
		are thread-safe.
