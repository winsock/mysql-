Patches for any of these thoughtfully considered!

New Feature Requests
--------------------

	o User-settable floating-point comparison precisions?  Something
	  like this: http://lists.mysql.com/plusplus/3984
	
	o Overload SQLQuery::insert() to accept a pair of STL iterators
	  for mass insertion of a range within a container.

	o Look through my own code for uses of hand-rolled SQL queries, and
	  try to reduce them to API features.

	o Re-do reference manual using Doxygen or similar:
	  http://sourceforge.net/projects/doxygen/

	o Write a new tutorial, separate from the reference manual, but
	  linking to it.  It should be built around the existing examples.
	  Where insufficient examples exist to support the tutorial, write
	  more.

	o Get PDF documentation generation working.

	o True thread-awareness in the library.  One place this could
	  impact: Connection lock mechanism could use platform mutexes
	  where available.  Enable via configure script flag on Unixy
	  systems.

	o Why does Connection::create_db() return true on failure?
	  (This is in this section, because changing it would break a lot of
	  code.  This sort of thing should be put off to v1.8 or v2.0.)

	o Connection lock mechanism should be extracted into a separate
	  class, instances of which could be created on the stack so
	  the lock is always relesased on function exit.  (Does Boost
	  provide something like this?)  This will probably break the ABI,
	  because Connection would have to derive from an interface class
	  for the lock object to be able to call functions on it.

	o Fold SQLQuery class into Query?  The only reason for the
	  separation goes back to the dream of having MySQL++ be database-
	  independent.  This is considered a new feature because it breaks
	  the ABI.

	o Add a way to temporarily disable exceptions to various classes.
	  (Make it an interface?)  This breaks ABI.


Bug Fix/Maintenance Items
-------------------------

	o Figure out what doc/sql++pretty is good for, and decide whether to
	  document it or throw it away.  (Something to do with SSQLS, I
	  think.)

	o sql_cmp(double,double) is foolish.  One shouldn't do == comparison
	  on floating point values.  Same for sql_cmp(float,float).  See
	  also floating point precision item in previous section.

	o custom2 and custom3 are broken under VC++.  Find out why.  It may
	  be related to the ostringstream conversion of the query classes.
	  These two are the only SSQLS examples that update the database.
	  Is that significant?

	o Attribution and licensing needs attention.  Note LGPL at top of
	  all source files, and note copyrights where known.

	o 64-bit integer support is not heavily tested.  It may yet have
	  problems.

	o SQLQuery shouldn't derive from std::stringstream.  It should
	  have a private std::stringstream member, and add the function
	  definitions it needs to look like a stringstream.  The Standard
	  C++ library classes were not designed to be subclassed.

	o Visual C++ project files should build a DLL version of the library
	  only, for LGPL reasons.

	o MinGW can't build a DLL for MySQL++.  It has to do with the file
	  reorganization in 1.7.20: if you move everything from row.cc to
	  a new row2.h file and include it in a few strategic locations, it
	  works.  But, this is a bogus fix.  Find the right one.
