Patches for any of these thoughtfully considered!

New Feature Requests
--------------------

	o User-settable floating-point comparison precisions?  Something
	  like this: http://lists.mysql.com/plusplus/3984
	
	o Overload SQLQuery::insert() to accept a pair of STL iterators
	  for mass insertion of a range within a container.

	o Look through my own code for uses of hand-rolled SQL queries, and
	  try to reduce them to API features.

	o Get PDF documentation generation working.


Bug Fix/Maintenance Items
-------------------------

	o sql_cmp(double,double) is foolish.  One shouldn't do == comparison
	  on floating point values.  Same for sql_cmp(float,float).  See
	  also floating point precision item in previous section.

	o Fold SQLQuery class into Query?  The only reason for the
	  separation goes back to the dream of having MySQL++ be database-
	  independent.

	o Is any specific Unicode support needed in MySQL++?  If not, at
	  least we should consider adding an example to demonstrate what you
	  have to do to use the existing features.
	
	o Some way to skip building examples.  Particularly useful when
	  building RPM, but not useful when building library as a developer,
	  since building examples is a simple test of the library.  Some
	  ideas in this thread on the automake mailing list:
	  http://lists.gnu.org/archive/html/automake/2005-01/msg00001.html

	o custom2 and custom3 are broken under VC++.  Find out why.  It may
	  be related to the ostringstream conversion of the query classes.
	  These two are the only SSQLS examples that update the database.
	  Is that significant?

	o Attribution and licensing needs attention.  Note LGPL at top of
	  all source files, and note copyrights where known.

	o 64-bit integer support is not heavily tested.  It may yet have
	  problems.

	o Documentation needs a thorough reworking.

	o SQLQuery shouldn't derive from std::stringstream.  It should
	  have a private std::stringstream member, and add the function
	  definitions it needs to look like a stringstream.  The Standard
	  C++ library classes were not designed to be subclassed.

	o Visual C++ project files should build a DLL version of the library
	  only, for LGPL reasons.

	o MinGW can't build a DLL for MySQL++.  It has to do with the file
	  reorganization in 1.7.20: if you move everything from row.cc to
	  a new row2.h file and include it in a few strategic locations, it
	  works.  But, this is a bogus fix.  Find the right one.
