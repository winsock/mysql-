/***********************************************************************
 custom5.cpp - Example showing how to use the equal_list() member of
 	some SSQLS types to build SELECT queries with custom WHERE clauses.
 
 Copyright (c) 1998 by Kevin Atkinson, (c) 1999, 2000 and 2001 by
 MySQL AB, (c) 2004, 2005 by Educational Technology Resources, Inc., and
 (c) 2005 by Chris Frey.  Others may also hold copyrights on code in
 this file.  See the CREDITS file in the top directory of the
 distribution for details.

 This file is part of MySQL++.

 MySQL++ is free software; you can redistribute it and/or modify it
 under the terms of the GNU Lesser General Public License as published
 by the Free Software Foundation; either version 2.1 of the License, or
 (at your option) any later version.

 MySQL++ is distributed in the hope that it will be useful, but WITHOUT
 ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
 License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with MySQL++; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301
 USA
***********************************************************************/

#include "util.h"

#include <mysql++.h>
#include <custom.h>

#include <iostream>
#include <iomanip>
#include <vector>

using namespace std;
using namespace mysqlpp;

sql_create_5(stock,				// struct name, 
			 1, 5,				// see custom4.cpp for notes
			 string, item,
			 longlong, num,
			 double, weight,
			 double, price,
			 Date, sdate)

int
main(int argc, char *argv[])
{
	try {						// its in one big try block
		Connection con(use_exceptions);
		if (!connect_to_db(argc, argv, con)) {
			return 1;
		}

		Query query = con.query();
		query << "select * from stock";

		// Store a result set in res
		vector < stock > res;
		query.storein(res);

		// Let's create a query based on data from the first row
		if (res.size()) {
			Query query = con.query();

			// Create a vector of bools which will allow us to pick
			// which fields we want to use in the WHERE clause
			vector<bool> a(5, false);

			// Use the field constants as indexes into the
			// vector.  These were generated by the stock
			// macro above.  Setting to true will cause
			// equal_list() below to only include these fields
			// in the WHERE clause.
			a[stock_weight] = true;
			a[stock_price] = true;

			//
			// Build the select statement using the data from
			// the first row of the result
			//
			// equal_list() will separate each field with the
			// string: " and "
			//
			query << "select * from stock where " <<
				res[0].equal_list(" and ", &a);

			// Print it out
			cout << "Test query:\n" << query.preview() << endl;
		}

		return 0;

	}
	catch (BadQuery& er) {
		// handle any connection or query errors that may come up
		cerr << "Error: " << er.what() << endl;
		return -1;
	}
	catch (BadConversion& er) {
		// handle bad conversions
		cerr << "Error: " << er.what() << "\"." << endl
			<< "retrieved data size: " << er.retrieved
			<< " actual data size: " << er.actual_size << endl;
		return -1;
	}
	catch (exception & er) {
		cerr << "Error: " << er.what() << endl;
		return -1;
	}
}

