<?xml version="1.0"?>
<makefile>
	<requires version="0.1.9"/>
	<using module="datafiles"/>
	<include file="presets/simple.bkl"/>

	<set var="DBLDOLLAR">$(DOLLAR)$(DOLLAR)</set>
	<set var="ZLIB">yes</set>

	<set var="THREAD_TYPE">single</set>
	<if cond="FORMAT in ['msvc6prj', 'mingw']">
		<set var="THREAD_TYPE">multi</set>
	</if>
		
    <option name="BUILD">
        <values>debug,release</values>
        <values-description>Debug,Release</values-description>
        <default-value>debug</default-value>
        <description>
            Type of compiled binaries
        </description>
    </option>

    <set var="DEBUGINFO">
        <if cond="BUILD=='debug'">on</if>
        <if cond="BUILD=='release'">off</if>
    </set>

	<set var="EXAMPLES">yes</set>
	<set var="HEADER_DIR">$(PREFIX)/include/mysql++</set>

	<dll id="mysqlpp">
		<sources>
			lib/coldata.cpp
			lib/connection.cpp
			lib/datetime.cpp
			lib/field_names.cpp
			lib/fields.cpp
			lib/field_types.cpp
			lib/manip.cpp
			lib/myset.cpp
			lib/qparms.cpp
			lib/query.cpp
			lib/result.cpp
			lib/row.cpp
			lib/sql_string.cpp
			lib/string_util.cpp 
			lib/transaction.cpp
			lib/type_info.cpp
			lib/vallist.cpp
		</sources>

		<debug-info>$(DEBUGINFO)</debug-info>

		<threading>$(THREAD_TYPE)</threading>
		<cxx-rtti>on</cxx-rtti>
		<cxx-exceptions>on</cxx-exceptions>
		
		<install-to>$(LIBDIR)</install-to>
		
		<if cond="FORMAT in ['msvc6prj', 'mingw']">
			<define>_UNICODE</define>
			<include>"C:\Program Files\MySQL\MySQL Server 5.0\include"</include>
			<lib-path>C:\Program Files\MySQL\MySQL Server 5.0\lib\opt</lib-path>
		</if>

		<if cond="FORMAT=='msvc6prj'">
			<define>MYSQLPP_MAKING_DLL</define>
			<sys-lib>libmysql</sys-lib>
		</if>

		<if cond="FORMAT=='mingw'">
			<define>MYSQLPP_NO_DLL</define>
			<sys-lib>mysqlclient</sys-lib>
		</if>

		<if cond="FORMAT=='autoconf'">
			<depends>lib/custom.h</depends>
			<depends>lib/querydef.h</depends>

			<cxxflags>@PTHREAD_CFLAGS@</cxxflags>
			<include>.</include>
			<ldflags>@PTHREAD_LIBS@ @MYSQLPP_EXTRA_LIBS@</ldflags>
			<ldflags>-Wl,-soname -Wl,libmysqlpp.so.2</ldflags>
			<sys-lib>@MYSQL_C_LIB@</sys-lib>

			<if cond="ZLIB=='yes'">
				<sys-lib>z</sys-lib>
			</if>

			<modify-target target="uninstall">
				<command>
					rm -f $(DESTDIR)$(libdir)/$(DLLPREFIX)mysqlpp.$(SO_SUFFIX)
				</command>
				<command>
					for f in *.h ; do rm -f $(HEADER_DIR)/$(DBLDOLLAR)f ; done
				</command>
				<command>rmdir $(HEADER_DIR)</command>
			</modify-target>
		</if>
	</dll>

	<data-files>
		<files>lib/*.h</files>
		<install-to>$(HEADER_DIR)</install-to>
	</data-files>

	<!-- Set up build options common to all examples -->
	<template id="common-example">
		<depends>mysqlpp</depends>
	
		<threading>$(THREAD_TYPE)</threading>
		<cxx-rtti>on</cxx-rtti>
		<cxx-exceptions>on</cxx-exceptions>
		<debug-info>$(DEBUGINFO)</debug-info>

		<include>lib</include>

		<if cond="FORMAT in ['autoconf', 'mingw', 'gnu']">
			<lib-path>.</lib-path>
		</if>
		<if cond="FORMAT=='msvc6prj'">
			<lib-path>$(BUILD)</lib-path>
		</if>

		<if cond="FORMAT in ['msvc6prj', 'mingw']">
			<define>_UNICODE</define>
			<include>"C:\Program Files\MySQL\MySQL Server 5.0\include"</include>
			<lib-path>C:\Program Files\MySQL\MySQL Server 5.0\lib\opt</lib-path>
			<sys-lib>mysqlpp</sys-lib>
		</if>

		<if cond="FORMAT=='msvc6prj'">
			<sys-lib>libmysql</sys-lib>
		</if>

		<if cond="FORMAT=='mingw'">
			<ldflags>-Wl,--enable-auto-import</ldflags>
			<define>MYSQLPP_NO_DLL</define>
			<lib-path>..\lib</lib-path>
			<sys-lib>mysqlclient</sys-lib>
		</if>

		<if cond="FORMAT=='autoconf'">
			<cxxflags>@PTHREAD_CFLAGS@</cxxflags>
			<ldflags>@PTHREAD_LIBS@ @MYSQLPP_EXTRA_LIBS@</ldflags>
			<sys-lib>@MYSQL_C_LIB@</sys-lib>

			<warnings>max</warnings>
			<sys-lib>mysqlpp</sys-lib>
			<if cond="ZLIB=='yes'">
				<sys-lib>z</sys-lib>
			</if>
		</if>

		<if cond="FORMAT=='gnu'">
			<include>/usr/include/mysql</include>
			<include>/usr/include/mysql++</include>
			<sys-lib>mysqlpp</sys-lib>
			<sys-lib>mysqlclient</sys-lib>
		</if>
	</template>

	<!-- Additional options specific to examples that depend on
	     the util module. -->
	<template id="util-example">
		<depends>util</depends>
		<sys-lib>mysqlpp_util</sys-lib>
	</template>

	<!-- Define output targets, if common-examples are enabled -->
	<if cond="EXAMPLES=='yes'">
		<!-- The "util" convenience library -->
		<lib id="util" template="common-example">
			<libname>mysqlpp_util</libname>
			<sources>examples/util.cpp</sources>
		</lib>
		
		<!-- The "standard" examples, being the ones that depend on
			the util library. -->
		<exe id="resetdb" template="util-example,common-example">
			<sources>examples/resetdb.cpp</sources>
		</exe>
		<exe id="simple1" template="util-example,common-example">
			<sources>examples/simple1.cpp</sources>
		</exe>
		<exe id="simple2" template="util-example,common-example">
			<sources>examples/simple2.cpp</sources>
		</exe>
		<exe id="simple3" template="util-example,common-example">
			<sources>examples/simple3.cpp</sources>
		</exe>
		<exe id="usequery" template="util-example,common-example">
			<sources>examples/usequery.cpp</sources>
		</exe>
		<exe id="multiquery" template="util-example,common-example">
			<sources>examples/multiquery.cpp</sources>
		</exe>
		<exe id="custom1" template="util-example,common-example">
			<sources>examples/custom1.cpp</sources>
		</exe>
		<exe id="custom2" template="util-example,common-example">
			<sources>examples/custom2.cpp</sources>
		</exe>
		<exe id="custom3" template="util-example,common-example">
			<sources>examples/custom3.cpp</sources>
		</exe>
		<exe id="custom4" template="util-example,common-example">
			<sources>examples/custom4.cpp</sources>
		</exe>
		<exe id="custom5" template="util-example,common-example">
			<sources>examples/custom5.cpp</sources>
		</exe>
		<exe id="custom6" template="util-example,common-example">
			<sources>examples/custom6.cpp</sources>
		</exe>
		<exe id="dbinfo" template="util-example,common-example">
			<sources>examples/dbinfo.cpp</sources>
		</exe>
		<exe id="fieldinf1" template="util-example,common-example">
			<sources>examples/fieldinf1.cpp</sources>
		</exe>
		<exe id="xaction" template="util-example,common-example">
			<sources>examples/xaction.cpp</sources>
		</exe>

		<!-- The few examples that don't use the util module -->
		<exe id="cgi_image" template="common-example">
			<sources>examples/cgi_image.cpp</sources>
		</exe>
		<exe id="load_file" template="common-example">
			<sources>examples/load_file.cpp</sources>
		</exe>
		<exe id="updel" template="common-example">
			<sources>examples/updel.cpp</sources>
		</exe>
	</if>

	<if cond="FORMAT=='autoconf'">
		<action id="lib/custom.h">
			<command>cd lib ; ./custom.pl</command>
			<depends-on-file>lib/custom.pl</depends-on-file>
		</action>

		<action id="lib/querydef.h">
			<command>cd lib ; ./querydef.pl</command>
			<depends-on-file>lib/querydef.pl</depends-on-file>
		</action>

		<action id="tags">
			<is-phony/>
			<command>make tags</command>
		</action>
		<action id="ctags"><depends>tags</depends></action>

		<action id="refman">
			<command>doxygen</command>
			<command>cd doc/refman/latex &amp;&amp; make pdf &amp;&amp; mv refman.pdf ../../mysqlpp-refman.pdf</command>
		</action>
	</if>
</makefile>
